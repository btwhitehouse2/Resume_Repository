lexer grammar GoliteLexer; 

NUMBER: [0] | [1-9][0-9]*;
PRINTF: 'printf';
FMT: 'fmt';
TYPE: 'type';
STRUCT: 'struct';
VAR: 'var';
NIL: 'nil';
RETURN: 'return';
FOR: 'for';
IF: 'if';
ELSE: 'else';
SCAN: 'scan';
INT: 'int';
FUNC: 'func';
BOOL: 'bool';
TRUE: 'true';
FALSE: 'false';
DELETE: 'delete';
NEW: 'new';
ID: [a-zA-z][a-zA-Z0-9]*;
STRING: '"' .*? '"';
OR: '||';
ANDCOMP: '&&';
ISEQUAL: '==';
NOTEQUAL: '!=';
GREATERTHAN: '>';
LESSTHAN: '<';
GREATEREQUAL: '>=';
LESSEQUAL: '<=';
NOT: '!';
EQUALS: '=';
PLUS: '+';
SUB: '-';
FSLASH: '/';
ASTERISK: '*';
SEMICOLON: ';';
COMMA: ',';
PERIOD: '.';
LCURLYBRACE: '{';
RCURLYBRACE: '}';
LPAREN: '(';
RPAREN: ')';
WS: [ \r\n\t]+ -> skip ;
COMMENTS: '//' ~[\r\n]* -> skip ;